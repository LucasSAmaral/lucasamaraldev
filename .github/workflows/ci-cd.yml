name: CI/CD Pipeline
env:
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    tags:
      - '*'

jobs:
  Docker-Image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t ${{ github.repository }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image
        run: docker tag ${{ github.repository }} lucassamaral/${{ github.repository }}:${{github.sha}} && docker push lucassamaral/${{ github.repository }}:${{github.sha}}

  Deploy-Production:
    needs: Docker-Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: SSH into EC2 and Pull Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: docker pull lucassamaral/${{ github.repository }}:${{github.sha}} && docker stop ${{ github.repository }} && docker rm ${{ github.repository }} && docker run -d -p 80:3000 --name ${{ github.repository }} lucassamaral/${{ github.repository }}:${{github.sha}}

    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Install Vercel CLI
    #     run: npm install --global vercel@latest
    #   - name: Pull Vercel Environment Information
    #     run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
    #   - name: Build Project Artifacts
    #     run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
    #   - name: Deploy Project Artifacts to Vercel
    #     run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
